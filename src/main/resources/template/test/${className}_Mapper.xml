<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<#include "global.ftl">
<mapper namespace="${tpl@mapper.packageName}.${className}Mapper">
    <resultMap id="${className}Map" type="${tpl@entity.packageName}.${className}">

<#list table.pkColumns as column>
        <id column="${column.columnName}" property="${column.fieldName}" jdbcType="${column.jdbcTypeName}" />
</#list>
<#list table.notPkColumns as column>
        <result column="${column.columnName}" property="${column.fieldName}" jdbcType="${column.jdbcTypeName}" />
</#list>
    </resultMap>

    <sql id="Base_Column_List">
<@columnList/>
    </sql>

    <select id="countByExample" parameterType="${example}" resultType="java.lang.Integer">
        select count(*) from ${table.tableName}
        <if test="_parameter != null">
            <include refid="common.Example_Where_Clause" />
        </if>
    </select>

    <delete id="deleteByExample" parameterType="${example}">
        delete from ${table.tableName}
        <if test="_parameter != null" >
            <include refid="common.Example_Where_Clause" />
        </if>
    </delete>

<#if table.pkCount == 1 >
    <delete id="deleteByPrimaryKey" parameterType="<@pkType/>" >
        delete from ${table.tableName}
        where <@pkCondition/>
    </delete>
</#if>


    <insert id="insert" parameterType="${tpl@entity.packageName}.${className}">
        insert into ${table.tableName} (
<@columnList/>
        ) values (
<@columnParamList/>
        )
    </insert>

    <insert id="insertSelective" parameterType="${tpl@entity.packageName}.${className}">
        insert into ${table.tableName}
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <@testColumnList/>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
           <@testColumnParameList/>
        </trim>
    </insert>


    <update id="updateByExample" parameterType="map">
        update ${table.tableName}
        set
<@updateColumnListWithMap/>
        <if test="_parameter != null">
            <include refid="common.Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExampleSelective" parameterType="map">
        update ${table.tableName}
        <set>
<@testUpdateColumnListWithMap/>
        </set>
        <if test="_parameter != null">
            <include refid="common.Update_By_Example_Where_Clause" />
        </if>
    </update>

<#if table.pkCount == 1 >
    <update id="updateByPrimaryKey" parameterType="${tpl@entity.packageName}.${className}">
        update ${table.tableName}
        set
<@updateColumnList/>
        where <@pkCondition/>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="${tpl@entity.packageName}.${className}">
        update ${table.tableName}
        <set>
<@testUpdateColumnList/>
        </set>
        where <@pkCondition/>
    </update>

</#if>

    <select id="selectByExample" resultMap="${className}Map" parameterType="${example}">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from ${table.tableName}
        <if test="_parameter != null" >
            <include refid="common.Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${r'${orderByClause}'}
        </if>
    </select>

<#if table.pkCount == 1 >
    <select id="selectByPrimaryKey" resultMap="${className}Map" parameterType="<@pkType/>">
        select
        <include refid="Base_Column_List" />
        from ${table.tableName}
        where <@pkCondition/>
    </select>
</#if>

</mapper>


<#-- MapperXML函数=================== -->
<#-- columnList -->
<#macro columnList>
        <#list table.columns as column> ${column.columnName} <#if column_has_next>,</#if> </#list>
</#macro>

<#-- columnParamList -->
<#macro columnParamList>
        <#list table.columns as column> ${"#"}{${column.fieldName}, jdbcType=${column.jdbcTypeName}} <#if column_has_next>,</#if> </#list>
</#macro>

<#-- pkCondition -->
<#macro pkCondition>
        <#list table.pkColumns as column> ${column.columnName} = ${"#"}{${column.fieldName} ,jdbcType=${column.jdbcTypeName}} <#if column_has_next> and </#if> </#list>
</#macro>

<#-- testColumnList -->
<#macro testColumnList>
<#list table.columns as column>
        <if test="${column.fieldName} != null">
        ${column.columnName},
        </if>
</#list>
</#macro>

<#-- testColumnParamList -->
<#macro testColumnParameList>
<#list table.columns as column>
        <if test="${column.fieldName} != null">
        ${"#"}{${column.fieldName}, jdbcType=${column.jdbcTypeName}},
        </if>
 </#list>
</#macro>

<#-- updateColumnList -->
<#macro updateColumnList>
<#list table.columns as column>
        ${column.columnName} = ${"#"}{${column.fieldName}, jdbcType=${column.jdbcTypeName}} <#if column_has_next>,</#if>
</#list>
</#macro>

<#-- updateColumnListWithMap -->
<#macro updateColumnListWithMap>
<#list table.columns as column>
        ${column.columnName} = ${"#"}{record.${column.fieldName}, jdbcType=${column.jdbcTypeName}} <#if column_has_next>,</#if>
</#list>
</#macro>

<#-- testUpdateColumnList -->
<#macro testUpdateColumnListWithMap>
<#list table.columns as column>
        <if test="record.${column.fieldName} != null">
        ${column.columnName} = ${"#"}{record.${column.fieldName}, jdbcType=${column.jdbcTypeName}} <#if column_has_next>,</#if>
        </if>
</#list>
</#macro>

<#-- updateColumnSelectiveList -->
<#macro testUpdateColumnList>
<#list table.notPkColumns as column>
        <if test="${column.fieldName} != null">
        ${column.columnName} =${"#"}{${column.fieldName}, jdbcType=${column.jdbcTypeName}} <#if column_has_next>,</#if>
        </if>
</#list>
 </#macro>